{"version":3,"sources":["api/verbs-api.js","redux/challenge-reducer.js","Components/Home/Home.jsx","assets/images/heart.png","Components/EndPage/EndPage.jsx","Components/Challenge/ChallengeHeadear/CompetitiveHeaders.jsx","Components/Challenge/ChallengeForm/CompetitiveFrom.jsx","redux/result-reducer.js","Components/Challenge/Competitive.jsx","Components/LeaderBoard/LeaderBoard.jsx","Components/Learn/LearnHeader/LearnHeader.jsx","Components/Learn/LearnForm/LearnForm.jsx","Components/Learn/Learn.jsx","App.jsx","reportWebVitals.js","redux/store.js","index.js"],"names":["verbsAPI","axios","get","process","then","r","data","FETCHING_START","FETCHING_COMPLETE","GET_VERBS_SUCCESS","GET_VERBS_FAIL","UPDATE_VERBS","initialState","verbs","isFetching","error","updateVerbs","payload","type","completeFetching","Home","dispatch","useDispatch","useEffect","a","response","localStorage","setItem","JSON","stringify","console","log","className","Button","variant","component","Link","to","Row","verb","mistake","useState","open","setOpen","TableRow","TableCell","onClick","scope","align","IconButton","aria-label","size","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","Typography","gutterBottom","Table","TableHead","TableBody","userInfinitive","infinitive","userPast","past","userPastParticiple","pastParticiple","EndPage","setStatus","result","useSelector","state","mistakesList","score","totalScore","TableContainer","Paper","Object","keys","map","key","index","ChallengeHeader","React","memo","currentVerb","life","isUntyped","setIsUntyped","challenge","setChallenge","cursor","setCursor","showCursor","setShowCursor","text","setTimeout","slice","length","trim","untype","String","setInterval","prev","l","src","heartImage","alt","CompetitiveFrom","onSubmit","isSubmit","errors","generateVerb","setErrors","setIsSubmit","formik","useFormik","initialValues","handleSubmit","TextField","InputProps","readOnly","label","name","onChange","handleChange","onBlur","handleBlur","value","values","touched","helperText","disabled","fullWidth","color","resetForm","UPDATE_RESULT","getItem","updateResult","Competitive","props","verbsList","parse","setMistakesList","setLife","setScore","setCurrentVerb","Math","floor","random","newVerbsList","splice","errorsCount","toLowerCase","LeaderBoard","LearnHeader","LearnFrom","Learn","isStop","setIsStop","LearnForm","App","status","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","parseFloat","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e402984.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n\r\nexport const verbsAPI = {\r\n    getVerbs: () => {\r\n        return axios.get(`${process.env.PUBLIC_URL}/verbs.json`).then(r => r.data)\r\n    }\r\n}","import {verbsAPI} from \"../api/verbs-api\";\r\n\r\nconst FETCHING_START = 'FETCHING_START'\r\nconst FETCHING_COMPLETE = 'FETCHING_COMPLETE'\r\nconst GET_VERBS_SUCCESS = 'GET_VERBS_SUCCESS'\r\nconst GET_VERBS_FAIL = 'GET_VERBS_SUCCESS'\r\nconst UPDATE_VERBS = 'UPDATE_VERBS'\r\n\r\nconst initialState = {\r\n    verbs: [],\r\n    isFetching: false,\r\n    error: false\r\n}\r\n\r\nexport const challengeReducer = (state = initialState, action) => {\r\n    const {type, payload} = action\r\n    switch (type) {\r\n        case FETCHING_START: {\r\n            return {...state, isFetching: true}\r\n        }\r\n        case FETCHING_COMPLETE: {\r\n            return {...state, isFetching: false}\r\n        }\r\n        case GET_VERBS_SUCCESS: {\r\n            return {...state, verbs: [...payload], error: false}\r\n        }\r\n        case GET_VERBS_FAIL: {\r\n            return {...state, error: true}\r\n        }\r\n        case UPDATE_VERBS: {\r\n            return {...state, verbs: [...payload]}\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateVerbs = (payload) => {\r\n    return {\r\n        type: UPDATE_VERBS,\r\n        payload\r\n    }\r\n}\r\n\r\nconst startFetching = () => {\r\n    return {\r\n        type: FETCHING_START\r\n    }\r\n}\r\nconst completeFetching = () => {\r\n    return {\r\n        type: FETCHING_COMPLETE\r\n    }\r\n}\r\nconst getVerbsSuccess = (payload) => {\r\n    return {\r\n        type: GET_VERBS_SUCCESS,\r\n        payload\r\n    }\r\n}\r\nconst getVerbsFail = () => {\r\n    return {\r\n        type: GET_VERBS_FAIL\r\n    }\r\n}\r\n\r\nexport const getVerbs = () => async (dispatch) => {\r\n    try {\r\n        dispatch(startFetching())\r\n        const response = await verbsAPI.getVerbs()\r\n        localStorage.setItem('verbs', JSON.stringify(response))\r\n        dispatch(getVerbsSuccess(response))\r\n        dispatch(completeFetching())\r\n    } catch (err) {\r\n        console.log(err)\r\n        dispatch(getVerbsFail())\r\n        dispatch(completeFetching())\r\n    }\r\n}","import {Button} from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useEffect} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getVerbs} from \"../../redux/challenge-reducer\";\r\n\r\nconst Home = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getVerbs())\r\n    }, [])\r\n\r\n    return(\r\n        <section className=\"homepage\">\r\n            <span className=\"homepage__welcome\">Welcome to</span>\r\n            <h1 className=\"homepage__title\">Irregular Verbs Challenge</h1>\r\n            <p className=\"homepage__subtitle\">\r\n                Try yourself in this challenge for check your knowledge about irregular verbs\r\n            </p>\r\n            <hr/>\r\n            <p className=\"homepage__faq\">\r\n                What to do? → enter three forms of verbs as many times in a row as you can.\r\n            </p>\r\n            <div className=\"homepage__controls\">\r\n                <Button variant=\"outlined\" className=\"homepage__button\" component={Link} to={'/competitive'}>Competitive mode</Button>\r\n                <span className=\"homepage__buttons-divider\">or</span>\r\n                <Button variant=\"outlined\" className=\"homepage__button\" component={Link} to={'/learn'}>Learning mode</Button>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\nexport default Home","export default __webpack_public_path__ + \"static/media/heart.b0e72901.png\";","import {\r\n    Box, Button,\r\n    Collapse,\r\n    IconButton, Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell, TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport {useEffect, useState} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst EndPage = ({setStatus}) => {\r\n\r\n    useEffect(() => {\r\n        setStatus('default')\r\n    }, [])\r\n\r\n    let result = useSelector(state => state.result)\r\n    console.log(result.mistakesList)\r\n    return(\r\n        <div className={'results'}>\r\n            <h1 className=\"results__title\">Congratulations! You complete challenge!</h1>\r\n            <span className=\"results__score\">Your score: {result.score}</span>\r\n            <span className=\"results__score\">Your total score: {result.totalScore}</span>\r\n            <div className=\"results__mistakes\">\r\n                <TableContainer component={Paper}>\r\n                    <Table aria-label=\"collapsible table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align={'center'} colSpan={2}>Your mistakes</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {Object.keys(result.mistakesList).map((key, index) => <Row key={index} verb={key} mistake={result.mistakesList[key]}/>)}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n            <div className=\"results__controls\">\r\n                <Button className={'results__control'} variant={'outlined'} component={Link} to={'/competitive'}>Play again</Button>\r\n                <Button className={'results__control'} variant={'outlined'} component={Link} to={'/learn'}>Learn verbs</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Row({verb, mistake}) {\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    console.log(mistake)\r\n\r\n    return (\r\n        <>\r\n            <TableRow>\r\n                <TableCell onClick={() => setOpen(!open)} component=\"th\" scope=\"row\" align={'center'}>\r\n                    <IconButton aria-label=\"expand row\" size=\"small\">\r\n                        {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n                    </IconButton>\r\n                    {verb}\r\n                </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n                <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                        <Box margin={1}>\r\n                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                {verb}\r\n                            </Typography>\r\n                            <Table size=\"small\" aria-label=\"purchases\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>Your answer</TableCell>\r\n                                        <TableCell>Right answer</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell>\r\n                                            {mistake.userInfinitive}\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            {mistake.infinitive}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>\r\n                                            {mistake.userPast}\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            {mistake.past}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>\r\n                                            {mistake.userPastParticiple}\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            {mistake.pastParticiple}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Box>\r\n                    </Collapse>\r\n                </TableCell>\r\n            </TableRow>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EndPage","import React, {useEffect, useState} from \"react\";\r\nimport heartImage from \"../../../assets/images/heart.png\"\r\nimport EndPage from \"../../EndPage/EndPage\";\r\n\r\n\r\nconst ChallengeHeader = React.memo(({currentVerb, score, life}) => {\r\n\r\n    const [isUntyped, setIsUntyped] = useState(false)\r\n\r\n    const [challenge, setChallenge] = useState('Okay, here we go!!!')\r\n    const [cursor, setCursor] = useState(false)\r\n    const [showCursor, setShowCursor] = useState(false)\r\n\r\n    const untype = () => {\r\n        let text = currentVerb.infinitive\r\n        setTimeout(() => {\r\n            text = text.slice(0, challenge.length + 1)\r\n            setChallenge(text.trim())\r\n        }, 100)\r\n    }\r\n\r\n    const type = () => {\r\n        let text = challenge\r\n        setTimeout(() => {\r\n            text = text.slice(0, text.length - 1)\r\n            setChallenge(text)\r\n            if (challenge.length === 0) {\r\n                setIsUntyped(true)\r\n                setChallenge(String(' '))\r\n            }\r\n        }, 100)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!isUntyped && currentVerb.infinitive !== challenge) {\r\n            type()\r\n        } else if (isUntyped && currentVerb.infinitive !== challenge) {\r\n            untype()\r\n        } else {\r\n            setIsUntyped(false)\r\n        }\r\n        if (!cursor) {\r\n            setCursor(true)\r\n            setInterval(() => {\r\n                setShowCursor(prev => !prev)\r\n            }, 1000)\r\n        }\r\n    }, [currentVerb, challenge])\r\n\r\n    return(\r\n        <div className=\"challenge__block\">\r\n            <span className=\"challenge__lives\">{life.map(l => <img className={'challenge__heart'} src={heartImage} alt={life.length}/>)}</span>\r\n            <span className=\"challenge__score\">score: {score}</span>\r\n            <h1 className=\"challenge__verb\">\r\n                {challenge}<span className={'challenge__cursor'}>{showCursor ? \"|\" : <>&nbsp;</>}</span>\r\n            </h1>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default ChallengeHeader","import {Button, TextField} from \"@material-ui/core\";\r\nimport {useFormik} from \"formik\";\r\nimport React from \"react\";\r\nimport {Redirect} from \"react-router-dom\"\r\nimport EndPage from \"../../EndPage/EndPage\";\r\n\r\nconst CompetitiveFrom = ({onSubmit, setStatus, isSubmit, errors, generateVerb, setErrors, setIsSubmit, life}) => {\r\n\r\n    console.log('ChallengeForm render')\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            infinitive: '',\r\n            past: '',\r\n            pastParticiple: ''\r\n        },\r\n        onSubmit\r\n    })\r\n\r\n    const handleSwitchStep = () => {\r\n        formik.resetForm()\r\n        setErrors({\r\n            infinitive: '',\r\n            past: '',\r\n            pastParticiple: '',\r\n        })\r\n        setStatus('default')\r\n        setIsSubmit(false)\r\n        generateVerb()\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <div className=\"challenge__input-group\">\r\n                <TextField\r\n                    InputProps={{\r\n                        readOnly: isSubmit,\r\n                    }}\r\n                    className={'challenge__input'}\r\n                    variant={'outlined'}\r\n                    label={'Infinitive'}\r\n                    type=\"text\"\r\n                    name=\"infinitive\"\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.infinitive}\r\n                />\r\n                {formik.errors.infinitive && formik.touched.infinitive && formik.errors.infinitive}\r\n                <TextField\r\n                    InputProps={{\r\n                        readOnly: isSubmit,\r\n                    }}\r\n                    error={!!errors.past}\r\n                    className={'challenge__input'}\r\n                    variant={'outlined'}\r\n                    label={'2-nd form'}\r\n                    type=\"text\"\r\n                    name=\"past\"\r\n                    helperText={errors.past}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.past}\r\n                />\r\n                {formik.errors.past && formik.touched.past && formik.errors.past}\r\n                <TextField\r\n                    InputProps={{\r\n                        readOnly: isSubmit,\r\n                    }}\r\n                    error={!!errors.pastParticiple}\r\n                    className={'challenge__input'}\r\n                    variant={'outlined'}\r\n                    label={'3-rd form'}\r\n                    type=\"text\"\r\n                    name=\"pastParticiple\"\r\n                    helperText={errors.pastParticiple}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.pastParticiple}\r\n                />\r\n                {formik.errors.pastParticiple && formik.touched.pastParticiple && formik.errors.pastParticiple}\r\n            </div>\r\n            <div className=\"challenge__button-group\">\r\n                <Button disabled={isSubmit} fullWidth className={'challenge__button'} variant={'contained'} color={'primary'}\r\n                        type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n                <Button onClick={handleSwitchStep} disabled={!isSubmit} fullWidth className={'challenge__button'} variant={'contained'} color={'secondary'}>\r\n                    Next\r\n                </Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default CompetitiveFrom","\r\nconst UPDATE_RESULT = 'UPDATE_RESULT'\r\n\r\nconst initialState = {\r\n    totalScore: localStorage.getItem('totalScore'),\r\n    score: 0,\r\n    mistakesList: []\r\n}\r\n\r\nexport const resultReducer = (state = initialState, action) => {\r\n    const {type, payload} = action\r\n    switch (type) {\r\n        case UPDATE_RESULT: {\r\n            let totalScore\r\n            if (localStorage.getItem('totalScore')) {\r\n                totalScore = parseFloat(localStorage.getItem('totalScore'))\r\n                totalScore = totalScore < payload.score ? payload.score : totalScore\r\n            } else {\r\n                localStorage.setItem('totalScore', payload.score)\r\n                totalScore = payload.score\r\n            }\r\n            return {\r\n                ...state, mistakesList: {...payload.mistakesList}, score: payload.score, totalScore: totalScore\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateResult = (payload) => {\r\n    return {\r\n        type: UPDATE_RESULT,\r\n        payload\r\n    }\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {updateVerbs} from \"../../redux/challenge-reducer\";\r\nimport ChallengeHeader from \"./ChallengeHeadear/CompetitiveHeaders\";\r\nimport CompetitiveFrom from \"./ChallengeForm/CompetitiveFrom\";\r\nimport {updateResult} from \"../../redux/result-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Competitive = React.memo((props) => {\r\n\r\n    let verbsList = useSelector(state => state.challenge.verbs)\r\n\r\n    verbsList = verbsList.length === 0 ? JSON.parse(localStorage.getItem('verbs')) : verbsList\r\n    const [mistakesList, setMistakesList] = useState()\r\n    const [life, setLife] = useState([1, 1, 1, 1, 1, 1])\r\n    const [score, setScore] = useState(0)\r\n    const [currentVerb, setCurrentVerb] = useState('')\r\n    const [isSubmit, setIsSubmit] = useState(false)\r\n    let [errors, setErrors] = useState({\r\n        infinitive: '',\r\n        past: '',\r\n        pastParticiple: ''\r\n    })\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const generateVerb = () => {\r\n        let index = Math.floor(Math.random() * verbsList.length)\r\n        setCurrentVerb(verbsList[index])\r\n        let newVerbsList = [...verbsList]\r\n        newVerbsList.splice(index, 1)\r\n        dispatch(updateVerbs(newVerbsList))\r\n    }\r\n\r\n    const handleSubmit = (values) => {\r\n        let errorsCount = 0\r\n        setIsSubmit(true)\r\n        Object.keys(values).map(key => {\r\n            if (currentVerb[key].toLowerCase().trim() !== values[key].toLowerCase().trim()) {\r\n                errorsCount++\r\n                setMistakesList(prev => {\r\n                    return {\r\n                        ...prev,\r\n                        [currentVerb.infinitive]: {\r\n                            infinitive: currentVerb.infinitive,\r\n                            past: currentVerb.past,\r\n                            pastParticiple: currentVerb.pastParticiple,\r\n                            userInfinitive: values.infinitive,\r\n                            userPast: values.past,\r\n                            userPastParticiple: values.pastParticiple,\r\n                        }\r\n                    }\r\n                })\r\n                setErrors(prev => {\r\n                    return {\r\n                        ...prev,\r\n                        [key]: currentVerb[key]\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        if (errorsCount === 0) {\r\n            props.setStatus('success')\r\n            setScore(prev => prev + 1)\r\n        } else if (errorsCount === 1) {\r\n            props.setStatus('mistake')\r\n            setLife(prev => prev.slice(0, prev.length - 1))\r\n            setScore(prev => prev + 0.5)\r\n        } else {\r\n            setLife(prev => prev.slice(0, prev.length - 2))\r\n            props.setStatus('wrong')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        generateVerb()\r\n    }, [])\r\n\r\n\r\n    console.log('Competitive render')\r\n\r\n    if (life.length === 0) {\r\n        let data = {\r\n            mistakesList,\r\n            score\r\n        }\r\n        dispatch(updateResult(data))\r\n        return <Redirect to={'/result'} />\r\n    }\r\n\r\n    return (\r\n        <section className=\"challenge\">\r\n            <ChallengeHeader\r\n                currentVerb={currentVerb}\r\n                score={score}\r\n                life={life}\r\n                mistakesList={mistakesList}\r\n            />\r\n            <CompetitiveFrom\r\n                setStatus={props.setStatus}\r\n                onSubmit={handleSubmit}\r\n                generateVerb={generateVerb}\r\n                errors={errors}\r\n                isSubmit={isSubmit}\r\n                setErrors={setErrors}\r\n                setIsSubmit={setIsSubmit}\r\n                life={life}\r\n            />\r\n        </section>\r\n    )\r\n})\r\n\r\n\r\n\r\nexport default Competitive","\r\n\r\nconst LeaderBoard = () => {\r\n    return(\r\n        <div className=\"leaderboard\">\r\n            <h1 className=\"leaderboard__title\">Leaderboard</h1>\r\n            <div className=\"leaderboard__list\">\r\n                <div className=\"leaderboard__item\">\r\n                    <img src=\"http://placehold.it/150x150\" alt=\"\" className=\"leaderboard__photo\"/>\r\n                    <div className=\"leaderboard__score-block\">\r\n                        <span className=\"leaderboard__score\">\r\n                            Total score: 10\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default LeaderBoard","import React, {useEffect, useState} from \"react\";\r\nimport heartImage from \"../../../assets/images/heart.png\"\r\nimport EndPage from \"../../EndPage/EndPage\";\r\n\r\n\r\nconst LearnHeader = React.memo(({currentVerb}) => {\r\n\r\n    const [isUntyped, setIsUntyped] = useState(false)\r\n\r\n    const [challenge, setChallenge] = useState('Start!!!')\r\n    const [cursor, setCursor] = useState(false)\r\n    const [showCursor, setShowCursor] = useState(false)\r\n\r\n\r\n    const untype = () => {\r\n        let text = currentVerb.infinitive\r\n        setTimeout(() => {\r\n            text = text.slice(0, challenge.length + 1)\r\n            setChallenge(text.trim())\r\n        }, 100)\r\n    }\r\n\r\n    const type = () => {\r\n        let text = challenge\r\n        setTimeout(() => {\r\n            text = text.slice(0, text.length - 1)\r\n            setChallenge(text)\r\n            if (challenge.length === 0) {\r\n                setIsUntyped(true)\r\n                setChallenge(String(' '))\r\n            }\r\n        }, 100)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!isUntyped && currentVerb.infinitive !== challenge) {\r\n            type()\r\n        } else if (isUntyped && currentVerb.infinitive !== challenge) {\r\n            untype()\r\n        } else {\r\n            setIsUntyped(false)\r\n        }\r\n        if (!cursor) {\r\n            setCursor(true)\r\n            setInterval(() => {\r\n                setShowCursor(prev => !prev)\r\n            }, 1000)\r\n        }\r\n    }, [currentVerb, challenge])\r\n\r\n    return(\r\n        <div className=\"challenge__block\">\r\n            <h1 className=\"challenge__verb\">\r\n                {challenge}<span className={'challenge__cursor'}>{showCursor ? \"|\" : <>&nbsp;</>}</span>\r\n            </h1>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default LearnHeader","import {Button, TextField} from \"@material-ui/core\";\r\nimport {useFormik} from \"formik\";\r\nimport React from \"react\";\r\nimport {Redirect} from \"react-router-dom\"\r\nimport EndPage from \"../../EndPage/EndPage\";\r\n\r\nconst LearnFrom = ({onSubmit, setStatus, isSubmit, errors, generateVerb, setErrors, setIsSubmit, life}) => {\r\n\r\n    console.log('ChallengeForm render')\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            infinitive: '',\r\n            past: '',\r\n            pastParticiple: ''\r\n        },\r\n        onSubmit\r\n    })\r\n\r\n    const handleSwitchStep = () => {\r\n        formik.resetForm()\r\n        setErrors({\r\n            infinitive: '',\r\n            past: '',\r\n            pastParticiple: '',\r\n        })\r\n        setStatus('default')\r\n        setIsSubmit(false)\r\n        generateVerb()\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <div className=\"challenge__input-group\">\r\n                <TextField\r\n                    InputProps={{\r\n                        readOnly: isSubmit,\r\n                    }}\r\n                    className={'challenge__input'}\r\n                    variant={'outlined'}\r\n                    label={'Infinitive'}\r\n                    type=\"text\"\r\n                    name=\"infinitive\"\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.infinitive}\r\n                />\r\n                {formik.errors.infinitive && formik.touched.infinitive && formik.errors.infinitive}\r\n                <TextField\r\n                    InputProps={{\r\n                        readOnly: isSubmit,\r\n                    }}\r\n                    error={!!errors.past}\r\n                    className={'challenge__input'}\r\n                    variant={'outlined'}\r\n                    label={'2-nd form'}\r\n                    type=\"text\"\r\n                    name=\"past\"\r\n                    helperText={errors.past}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.past}\r\n                />\r\n                {formik.errors.past && formik.touched.past && formik.errors.past}\r\n                <TextField\r\n                    InputProps={{\r\n                        readOnly: isSubmit,\r\n                    }}\r\n                    error={!!errors.pastParticiple}\r\n                    className={'challenge__input'}\r\n                    variant={'outlined'}\r\n                    label={'3-rd form'}\r\n                    type=\"text\"\r\n                    name=\"pastParticiple\"\r\n                    helperText={errors.pastParticiple}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.pastParticiple}\r\n                />\r\n                {formik.errors.pastParticiple && formik.touched.pastParticiple && formik.errors.pastParticiple}\r\n            </div>\r\n            <div className=\"challenge__button-group\">\r\n                <Button disabled={isSubmit} fullWidth className={'challenge__button'} variant={'contained'} color={'primary'}\r\n                        type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n                <Button onClick={handleSwitchStep} disabled={!isSubmit} fullWidth className={'challenge__button'} variant={'contained'} color={'secondary'}>\r\n                    Next\r\n                </Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default LearnFrom","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {updateVerbs} from \"../../redux/challenge-reducer\";\r\nimport {updateResult} from \"../../redux/result-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport LearnHeader from \"./LearnHeader/LearnHeader\";\r\nimport LearnForm from \"./LearnForm/LearnForm\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nconst Learn = React.memo((props) => {\r\n\r\n    let verbsList = useSelector(state => state.challenge.verbs)\r\n\r\n    verbsList = verbsList.length === 0 ? JSON.parse(localStorage.getItem('verbs')) : verbsList\r\n    const [isStop, setIsStop] = useState(false)\r\n    const [mistakesList, setMistakesList] = useState()\r\n    const [currentVerb, setCurrentVerb] = useState('')\r\n    const [isSubmit, setIsSubmit] = useState(false)\r\n    let [errors, setErrors] = useState({\r\n        infinitive: '',\r\n        past: '',\r\n        pastParticiple: ''\r\n    })\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const generateVerb = () => {\r\n        let index = Math.floor(Math.random() * verbsList.length)\r\n        setCurrentVerb(verbsList[index])\r\n        let newVerbsList = [...verbsList]\r\n        newVerbsList.splice(index, 1)\r\n        dispatch(updateVerbs(newVerbsList))\r\n    }\r\n\r\n    const handleSubmit = (values) => {\r\n        let errorsCount = 0\r\n        setIsSubmit(true)\r\n        Object.keys(values).map(key => {\r\n            if (currentVerb[key].toLowerCase().trim() !== values[key].toLowerCase().trim()) {\r\n                errorsCount++\r\n                setMistakesList(prev => {\r\n                    return {\r\n                        ...prev,\r\n                        [currentVerb.infinitive]: {\r\n                            infinitive: currentVerb.infinitive,\r\n                            past: currentVerb.past,\r\n                            pastParticiple: currentVerb.pastParticiple,\r\n                            userInfinitive: values.infinitive,\r\n                            userPast: values.past,\r\n                            userPastParticiple: values.pastParticiple,\r\n                        }\r\n                    }\r\n                })\r\n                setErrors(prev => {\r\n                    return {\r\n                        ...prev,\r\n                        [key]: currentVerb[key]\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        if (errorsCount === 0) {\r\n            props.setStatus('success')\r\n        } else if (errorsCount === 1) {\r\n            props.setStatus('mistake')\r\n        } else {\r\n            props.setStatus('wrong')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        generateVerb()\r\n    }, [])\r\n\r\n    if (isStop) {\r\n        let data = {\r\n            mistakesList,\r\n            score: 0\r\n        }\r\n        dispatch(updateResult(data))\r\n        return <Redirect to={'/result'} />\r\n    }\r\n\r\n    return (\r\n        <section className=\"challenge\">\r\n            <LearnHeader\r\n                currentVerb={currentVerb}\r\n            />\r\n            <LearnForm\r\n                setStatus={props.setStatus}\r\n                onSubmit={handleSubmit}\r\n                generateVerb={generateVerb}\r\n                errors={errors}\r\n                isSubmit={isSubmit}\r\n                setErrors={setErrors}\r\n                setIsSubmit={setIsSubmit}\r\n            />\r\n            <div className=\"challenge__controls\">\r\n                <Button onClick={() => setIsStop(true)} className=\"challenge__stop\" variant={'outlined'}>Stop</Button>\r\n            </div>\r\n        </section>\r\n    )\r\n})\r\n\r\n\r\n\r\nexport default Learn","import './App.css';\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport Home from \"./Components/Home/Home\";\nimport Competitive from \"./Components/Challenge/Competitive\";\nimport {useState} from \"react\";\nimport EndPage from \"./Components/EndPage/EndPage\";\nimport LeaderBoard from \"./Components/LeaderBoard/LeaderBoard\";\nimport Learn from \"./Components/Learn/Learn\";\n\n\nfunction App() {\n\n    const [status, setStatus] = useState('default')\n\n    return (\n        <div className={`App ${status !== 'default' ? status : ''}`}>\n            <HashRouter>\n                <Switch>\n                    <Route exact path={'/'} component={Home}/>\n                    <Route exact path={'/competitive'}>\n                        <Competitive setStatus={setStatus}/>\n                    </Route>\n                    <Route exact path={'/learn'}>\n                        <Learn setStatus={setStatus}/>\n                    </Route>\n                    <Route exact path={'/result'}>\n                        <EndPage setStatus={setStatus}/>\n                    </Route>\n                    <Route exact path={'/leaderboard'} component={LeaderBoard}/>\n                </Switch>\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {challengeReducer} from \"./challenge-reducer\";\r\nimport {resultReducer} from \"./result-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    challenge: challengeReducer,\r\n    result: resultReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nlet store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\nwindow.__store__ = store\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}